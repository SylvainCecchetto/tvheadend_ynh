#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================
source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# LOAD SETTINGS
#=================================================

ynh_script_progression --message="Loading settings..." --time --weight=1

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get --app=$app --key=domain)
path_url=$(ynh_app_setting_get --app=$app --key=path_url)
final_path=$(ynh_app_setting_get --app=$app --key=final_path)
port=$(ynh_app_setting_get --app=$app --key=port)
stream_port=$(ynh_app_setting_get --app=$app --key=stream_port)


#=================================================
# CHECK IF THE APP CAN BE RESTORED
#=================================================
ynh_script_progression --message="Validating restoration parameters..." --time --weight=1

ynh_webpath_available --domain=$domain --path_url=$path_url \
    || ynh_die --message="Path not available: ${domain}${path_url}"
test ! -d $final_path \
    || ynh_die --message="There is already a directory: $final_path "


#=================================================
# OPEN A PORT
#=================================================

if yunohost firewall list | grep -q "\- $port$"
then
    ynh_die --message="Port $port already open (and maybe used by another application)"
fi

if yunohost firewall list | grep -q "\- $stream_port$"
then
    ynh_die --message="Port $stream_port already open (and maybe used by another application)"
fi

ynh_exec_warn_less yunohost firewall allow --no-upnp TCP $port
ynh_exec_warn_less yunohost firewall allow --no-upnp TCP $stream_port


#=================================================
# INSTALL DEPENDENCIES
#=================================================

ynh_script_progression --message="Installing dependencies..." --time --weight=1

if [ -n "$(uname -m | grep arm)" ]
then
    ynh_install_app_dependencies $pkg_dependencies_rb
else
    ynh_install_app_dependencies $pkg_dependencies_x86
fi


#=================================================
# INSTALL DEB PACKAGE
#=================================================

ynh_script_progression --message="Installing $app..." --time --weight=1

temp_folder="$(mktemp -d)"
tvheadend_deb_dst="$temp_folder/tvheadend_deb.deb"

if [ -n "$(uname -m | grep arm)" ]
then
    ynh_exec_quiet "wget -q -O $tvheadend_deb_dst $tvheadend_deb_arm"
elif [ -n "$(uname -m | grep x86_64)" ]
then
    ynh_exec_quiet "wget -q -O $tvheadend_deb_dst $tvheadend_deb_x86_64"
else
    ynh_exec_quiet "wget -q -O $tvheadend_deb_dst $tvheadend_deb_x86_32"
fi

ynh_package_install "$tvheadend_deb_dst"

ynh_secure_remove --file="$temp_folder"

# Tvheadend automatically start after install
# we stop it
ynh_systemd_action --service_name=$app --action="stop"

#=================================================
# RESTORE THE NGINX CONFIGURATION
#=================================================

ynh_restore_file --origin_path="/etc/nginx/conf.d/$domain.d/$app.conf"

#=================================================
# RESTORE THE APP MAIN DIR
#=================================================
ynh_script_progression --message="Restoring $app config..." --time --weight=1

ynh_restore_file --origin_path="$final_path"
ynh_restore_file --origin_path="/etc/default/tvheadend"


#=================================================
# RESTORE THE LOGROTATE CONFIGURATION
#=================================================

ynh_restore_file --origin_path="/etc/logrotate.d/$app"


#=================================================
# ADVERTISE SERVICE IN ADMIN PANEL
#=================================================

yunohost service add $app --log "/var/log/$app.log"


#=================================================
# SETUP SSOWAT
#=================================================

ynh_script_progression --message="Configuring SSOwat..." --time --weight=1

ynh_app_setting_set --app=$app --key=skipped_uris --value="/"


#=================================================
# RELOAD NGINX
#=================================================

ynh_script_progression --message="Reloading nginx web server..." --time --weight=1

ynh_systemd_action --service_name=nginx --action=reload


#=================================================
# START SYSTEMD SERVICE
#=================================================

ynh_script_progression --message="Starting $app service..." --time --weight=1

# Start a systemd service
ynh_systemd_action --service_name=$app --action="start" --log_path="/var/log/$app.log"


#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --time --last

